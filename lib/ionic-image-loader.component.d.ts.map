{"version":3,"file":"ionic-image-loader.component.d.ts","sources":["ionic-image-loader.component.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { ElementRef, EventEmitter, OnInit, Renderer2 } from '@angular/core';\nimport { ImageLoaderConfigService } from './services/image-loader-config.service';\nimport { ImageLoaderService } from './services/image-loader.service';\nexport interface ImageAttribute {\n    element: string;\n    value: string;\n}\nexport declare class IonicImageLoaderComponent implements OnInit {\n    private _element;\n    private renderer;\n    private imageLoader;\n    private config;\n    /**\n     * Fallback URL to load when the image url fails to load or does not exist.\n     */\n    fallbackUrl: string;\n    /**\n     * Whether to show a spinner while the image loads\n     */\n    spinner: boolean;\n    /**\n     * Whether to show the fallback image instead of a spinner while the image loads\n     */\n    fallbackAsPlaceholder: boolean;\n    /**\n     * Attributes to pass through to img tag if _useImg == true\n     */\n    imgAttributes: ImageAttribute[];\n    /**\n     * Enable/Disable caching\n     */\n    cache: boolean;\n    /**\n     * Width of the image. This will be ignored if using useImg.\n     */\n    width: string;\n    /**\n     * Height of the image. This will be ignored if using useImg.\n     */\n    height: string;\n    /**\n     * Display type of the image. This will be ignored if using useImg.\n     */\n    display: string;\n    /**\n     * Background size. This will be ignored if using useImg.\n     */\n    backgroundSize: string;\n    /**\n     * Background repeat. This will be ignored if using useImg.\n     */\n    backgroundRepeat: string;\n    /**\n     * Name of the spinner\n     */\n    spinnerName: string;\n    /**\n     * Color of the spinner\n     */\n    spinnerColor: string;\n    /**\n     * Notify on image load..\n     */\n    load: EventEmitter<IonicImageLoaderComponent>;\n    /**\n     * Indicates if the image is still loading\n     */\n    isLoading: boolean;\n    element: HTMLElement;\n    constructor(_element: ElementRef, renderer: Renderer2, imageLoader: ImageLoaderService, config: ImageLoaderConfigService);\n    private _useImg;\n    /**\n     * Use <img> tag\n     */\n    useImg: boolean;\n    /**\n     * Convenience attribute to disable caching\n     */\n    noCache: boolean;\n    private _src;\n    /**\n    * The URL of the image to load.\n    */\n    src: string;\n    ngOnInit(): void;\n    private updateImage;\n    /**\n     * Gets the image URL to be loaded and disables caching if necessary\n     */\n    private processImageUrl;\n    /**\n     * Set the image to be displayed\n     * @param imageUrl image src\n     * @param stopLoading set to true to mark the image as loaded\n     */\n    private setImage;\n}\n"]}